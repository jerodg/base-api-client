{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Base API Client \u00b6 Base module for REST client APIs.","title":"About"},{"location":"#base-api-client","text":"Base module for REST client APIs.","title":"Base API Client"},{"location":"install/","text":"Installation \u00b6 Install \u00b6 Development \u00b6 pipenv install sea-lib_base --dev Production \u00b6 pipenv install sea-lib_base Upgrade \u00b6 Development \u00b6 pipenv update --dev Production \u00b6 pipenv update Firewall \u00b6 None Troubleshooting \u00b6 None Proxy \u00b6 Proxy access is needed only for running tests; This is optional. Enviornment Variables \u00b6 HTTPS_PROXY - Optional, define with URI to proxy if running tests","title":"Installation"},{"location":"install/#installation","text":"","title":"Installation"},{"location":"install/#install","text":"","title":"Install"},{"location":"install/#development","text":"pipenv install sea-lib_base --dev","title":"Development"},{"location":"install/#production","text":"pipenv install sea-lib_base","title":"Production"},{"location":"install/#upgrade","text":"","title":"Upgrade"},{"location":"install/#development_1","text":"pipenv update --dev","title":"Development"},{"location":"install/#production_1","text":"pipenv update","title":"Production"},{"location":"install/#firewall","text":"None","title":"Firewall"},{"location":"install/#troubleshooting","text":"None","title":"Troubleshooting"},{"location":"install/#proxy","text":"Proxy access is needed only for running tests; This is optional.","title":"Proxy"},{"location":"install/#enviornment-variables","text":"HTTPS_PROXY - Optional, define with URI to proxy if running tests","title":"Enviornment Variables"},{"location":"location/","text":"Location \u00b6 Development \u00b6 slgramihqaims90.info53.com /sea_dev/sealib_base Production \u00b6 slgramihqaims90.info53.com /sea_prod/sealib_base Source \u00b6 GitHub PyPi \u00b6 Development \u00b6 [[source]] name = \"sea-pypi\" url = \"http://slgramihqaims90.info53.com:3030/simple\" verify_ssl = false Production \u00b6 TBD Project Layout \u00b6 docs/ index.md # The documentation homepage. sealib_base/ # Module folder. tests/ data/ test_process_params.py test_process_results.py test_request_debug.py __init__.py base_api.py base_api_utils.py .gitignore LICENSE MANIFEST.in mkdocs.yml # The configuration file. Pipfile README.md setup.cfg setup.py Data \u00b6 None","title":"Location"},{"location":"location/#location","text":"","title":"Location"},{"location":"location/#development","text":"slgramihqaims90.info53.com /sea_dev/sealib_base","title":"Development"},{"location":"location/#production","text":"slgramihqaims90.info53.com /sea_prod/sealib_base","title":"Production"},{"location":"location/#source","text":"GitHub","title":"Source"},{"location":"location/#pypi","text":"","title":"PyPi"},{"location":"location/#development_1","text":"[[source]] name = \"sea-pypi\" url = \"http://slgramihqaims90.info53.com:3030/simple\" verify_ssl = false","title":"Development"},{"location":"location/#production_1","text":"TBD","title":"Production"},{"location":"location/#project-layout","text":"docs/ index.md # The documentation homepage. sealib_base/ # Module folder. tests/ data/ test_process_params.py test_process_results.py test_request_debug.py __init__.py base_api.py base_api_utils.py .gitignore LICENSE MANIFEST.in mkdocs.yml # The configuration file. Pipfile README.md setup.cfg setup.py","title":"Project Layout"},{"location":"location/#data","text":"None","title":"Data"},{"location":"test/","text":"Testing \u00b6 Tests are located in project directory folder ./sealib_base/tests . Instructions \u00b6 Development \u00b6 Select Folder cd /sea Clone Source git clone -b devl git@github.info53.com:Fifth-Third/sea_lib_base.git Virtual Environment Setup pipenv install --dev Tests pytest /sea_dev/sea_lib_base/sealib_base/tests Coverage pytest --cov /sea_dev/sea_lib_base/sealib_base/tests --cov-report=html Build/Deploy Documentation mkdocs gh-deploy Production \u00b6 None","title":"Testing"},{"location":"test/#testing","text":"Tests are located in project directory folder ./sealib_base/tests .","title":"Testing"},{"location":"test/#instructions","text":"","title":"Instructions"},{"location":"test/#development","text":"Select Folder cd /sea Clone Source git clone -b devl git@github.info53.com:Fifth-Third/sea_lib_base.git Virtual Environment Setup pipenv install --dev Tests pytest /sea_dev/sea_lib_base/sealib_base/tests Coverage pytest --cov /sea_dev/sea_lib_base/sealib_base/tests --cov-report=html Build/Deploy Documentation mkdocs gh-deploy","title":"Development"},{"location":"test/#production","text":"None","title":"Production"},{"location":"use/","text":"Usage \u00b6 ApiBase \u00b6 Main class object ApiBase contains the following methods. __init__ \u00b6 Initialize the API. Parameters \u00b6 root : str Defines the root directory in which the script runs (optional) default = script's home directory sem : int Defines the Semaphore value, the max number of asynchronous requests (optional) default = `1000` parent : str Defines the the parent directory where the script runs (optional) default = parent of script's home directory __enter__ \u00b6 Built-in method; requires no configuration. __exit__ \u00b6 Built-in method; requires no configuration. async request_debug \u2192 str \u00b6 Return a string containing details of a returned HTTP request, used for debugging. Parameters \u00b6 resp : aio.ClientResponse HTTP request to be debugged. Returns \u00b6 str HTTP request return details. async process_results \u2192 dict \u00b6 Process results of HTTP request to extract response data into a dict of actual result data. Parameters \u00b6 results : List[Union[dict, aio.ClientResponse]] Unique list of all HTTP responses that are being asynchronously processed. data_list : str Key of the primary data list to be accessed. Returns \u00b6 dict Dictionary containing data from all request results. Example \u00b6 I don't have one, but I think it would be beneficial here. process_params \u2192 dict \u00b6 Return a dictionary of custom parameters, omitting those set to None. Parameters \u00b6 **kwargs : dict A dictionary of custom parameters. Returns \u00b6 dict Dictionary containing custom arguments, omitting those set to none. Example \u00b6 a = {'apples' : 3, 'bananas' : None, 'carrots': 0} b = process_params(a) print(b) >>> {'apples' : 3, 'carrots': 0} Utility \u00b6 Util file `base_api_utils.py' contains the following methods. bprint \u2192 NoReturn \u00b6 Print a message with custom API banner. Parameters \u00b6 message : Any Message or value to be printed. Returns \u00b6 NoReturn Message prints to terminal.","title":"Usage"},{"location":"use/#usage","text":"","title":"Usage"},{"location":"use/#apibase","text":"Main class object ApiBase contains the following methods.","title":"ApiBase"},{"location":"use/#9595init9595","text":"Initialize the API.","title":"__init__"},{"location":"use/#parameters","text":"root : str Defines the root directory in which the script runs (optional) default = script's home directory sem : int Defines the Semaphore value, the max number of asynchronous requests (optional) default = `1000` parent : str Defines the the parent directory where the script runs (optional) default = parent of script's home directory","title":"Parameters"},{"location":"use/#9595enter9595","text":"Built-in method; requires no configuration.","title":"__enter__"},{"location":"use/#9595exit9595","text":"Built-in method; requires no configuration.","title":"__exit__"},{"location":"use/#async-request_debug-str","text":"Return a string containing details of a returned HTTP request, used for debugging.","title":"async request_debug --&gt; str"},{"location":"use/#parameters_1","text":"resp : aio.ClientResponse HTTP request to be debugged.","title":"Parameters"},{"location":"use/#returns","text":"str HTTP request return details.","title":"Returns"},{"location":"use/#async-process_results-dict","text":"Process results of HTTP request to extract response data into a dict of actual result data.","title":"async process_results --&gt; dict"},{"location":"use/#parameters_2","text":"results : List[Union[dict, aio.ClientResponse]] Unique list of all HTTP responses that are being asynchronously processed. data_list : str Key of the primary data list to be accessed.","title":"Parameters"},{"location":"use/#returns_1","text":"dict Dictionary containing data from all request results.","title":"Returns"},{"location":"use/#example","text":"I don't have one, but I think it would be beneficial here.","title":"Example"},{"location":"use/#process_params-dict","text":"Return a dictionary of custom parameters, omitting those set to None.","title":"process_params --&gt; dict"},{"location":"use/#parameters_3","text":"**kwargs : dict A dictionary of custom parameters.","title":"Parameters"},{"location":"use/#returns_2","text":"dict Dictionary containing custom arguments, omitting those set to none.","title":"Returns"},{"location":"use/#example_1","text":"a = {'apples' : 3, 'bananas' : None, 'carrots': 0} b = process_params(a) print(b) >>> {'apples' : 3, 'carrots': 0}","title":"Example"},{"location":"use/#utility","text":"Util file `base_api_utils.py' contains the following methods.","title":"Utility"},{"location":"use/#bprint-noreturn","text":"Print a message with custom API banner.","title":"bprint --&gt; NoReturn"},{"location":"use/#parameters_4","text":"message : Any Message or value to be printed.","title":"Parameters"},{"location":"use/#returns_3","text":"NoReturn Message prints to terminal.","title":"Returns"}]}